# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: true

    # Store the arm compilers in the cache to speed up builds
    - name: Cache arm-none-eabi-gcc tools
      id: cache-arm-gcc
      uses: actions/cache@v1
      with:
        path: $HOME/arm-none-eabi-gcc-9-2019-q4
        key: ${{ runner.os }}-arm-gcc-9-2019-q4

    # Get the arm-non-eabi-gcc toolchain   
    - name: Install arm-none-eabi-gcc
      uses: fiam/arm-none-eabi-gcc@v1
      if: steps.cache-arm-gcc.outputs.cache-hit != 'true'
      with:
          release: '9-2019-q4' # The arm-none-eabi-gcc release to use.
          directory: $HOME/arm-none-eabi-gcc-9-2019-q4

    - name: Add toolchain to path
      run: echo "::add-path::$HOME/arm-none-eabi-gcc-9-2019-q4/bin"
      shell: bash

    - name: Build Firmware
      run: make -j4

    - name: Docker build
      run: ./docker-test.sh
